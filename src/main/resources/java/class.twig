{%- import "/java/macros.twig" as macros -%}
{%- import "/java/types.twig" as types -%}

{%- set name = definition.name.simpleName -%}

{% set pkg = "" %}
{% for p in definition.name.path %}
  {% if (loop.revindex0 != 0) %}
    {% if (loop.index0 != 0) %}
      {% set pkg = concat(pkg, ".", lower(p)) %}
    {% else %}
      {% set pkg = concat(pkg, lower(p)) %}
    {% endif %}
  {% endif %}
{% endfor %}
{% if (pkg != "") %}
  package {{ pkg }};
{% endif %}

// Generated with https://github.com/paidgeek/bufobjects

{% set fields = definition.fields %}
{% for p in definition.parentPath -%}
  {% set fields = merge(fields, p.fields) %}
{%- endfor -%}

import {{ lower(topNamespace) }}.BufferObject;
import {{ lower(topNamespace) }}.BufferBuilder;

@SuppressWarnings("all")
public class {{ name }}
{% if (definition.parent is not null) -%}
  extends {{ trim(macros.getBaseType(definition.parentDefinition)) }}
{%- else -%}
  extends BufferObject
{%- endif -%}
{

{% for field in definition.fields %}
  {%- set typeName = trim(macros.getTypeName(utils, field.type)) -%}
  protected {{ typeName }} {{ utils.toCamelCase(field.name) }};
  {%- if (utils.getClassName(field.type) == "ArrayType") %}
    public static final int {{ utils.toUpperCase(field.name) }}_LENGTH = {{ field.type.length }};
  {% endif -%}
{% endfor %}

public {{ name }}() {
  reset();
}

public {{ name }}(
{%- for field in fields -%}
  {%- set typeName = trim(macros.getTypeName(utils, field.type)) -%}
  {%- set camelCase = utils.toCamelCase(field.name) -%}
  {{ typeName }} {{ camelCase }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%})
{ {%- for field in fields -%}
  {%- set camelCase = utils.toCamelCase(field.name) -%}
    this.{{ camelCase }} = {{ camelCase }};
{%- endfor -%}
}

public void init(
{%- for field in fields -%}
  {%- set typeName = trim(macros.getTypeName(utils, field.type)) -%}
  {%- set camelCase = utils.toCamelCase(field.name) -%}
  {{ typeName }} {{ camelCase }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%})
{ {%- for field in fields -%}
  {%- set camelCase = utils.toCamelCase(field.name) -%}
    this.{{ camelCase }} = {{ camelCase }};
{%- endfor -%}
}

public {{ primitiveTypes[bufferObjectIdType] }} bufferObjectId() {
  return {{ utils.getBufferObjectIdName(definition) }};
}

public void clear() {
{% if (definition.parent) -%}
  super.clear();
{%- endif -%}
{% include "/java/class/clear.twig" %}
}

public {{ name }} copy() {
  {% include "/java/class/copy.twig" %}
}

public void copyTo(BufferObject obj) {
  {{ name }} dst = ({{ name }}) obj;
  {% include "/java/class/copy_to.twig" %}
}

public int size() {
  {% include "/java/class/size.twig" %}
}

public void writeTo(BufferBuilder bb) {
  int needed = size();
  if(bb.getRemaining() < needed) {
    bb.growBuffer(needed);
  }
{% include "/java/class/write_to.twig" %}
}

public void readFrom(BufferBuilder bb) {
{% include "/java/class/read_from.twig" %}
}

{% include "/java/class/getset.twig" %}

{% include "/java/class/has.twig" %}

public void writeJsonTo(java.io.OutputStream os) throws java.io.IOException {
  {% include "/java/class/write_json.twig" %}
}

public static void writeDirectTo(BufferBuilder bb,
{%- for field in fields -%}
  {%- set typeName = trim(macros.getTypeName(utils, field.type)) -%}
  {%- set camelCase = utils.toCamelCase(field.name) -%}
  {{ typeName }} {{ camelCase }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%}) {
  {% include "/java/class/write_direct_to.twig" %}
}

public static void writeDirectIdentifiedTo(BufferBuilder bb,
{%- for field in fields -%}
  {%- set typeName = trim(macros.getTypeName(utils, field.type)) -%}
  {%- set camelCase = utils.toCamelCase(field.name) -%}
  {{ typeName }} {{ camelCase }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%}) {
  bb.write{{ builderTypeNames[bufferObjectIdType] }}({{ utils.getBufferObjectIdName(definition) }});
  writeDirectTo(bb, {%- for field in fields -%}
  {{ utils.toCamelCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
}

public static Builder newBuilder() {
  return new Builder();
}

{% include "/java/class/builder.twig" %}

}
