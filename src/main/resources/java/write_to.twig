{%- for field in fields -%}
  {%- set typeName = trim(macros.getTypeName(utils, field.type)) -%}
  {%- set name = concat("this.", utils.toCamelCase(field.name)) -%}
  {%- set className = utils.getClassName(field.type) -%}
  {
  {%- if (className == "ArrayType") -%}
    {% set elementName = concat(name, "[i]") %}
    if({{ name }} == null) {
    {% if (field.type.type.token.toString() == "s") %}
      {{ name }} = new byte[{{ utils.toUpperCase(field.name) }}_LENGTH][];
    {% else %}
      {{ name }} = new {{ primitiveTypes[field.type.type.token.toString()] }}[{{ utils.toUpperCase(field.name) }}_LENGTH];
    {% endif %}
    }
    for(int i = 0; i < {{ utils.toUpperCase(field.name) }}_LENGTH; i++) {
    {{ trim(macros.writePrimary(utils, bufferObjectIdType, field.type.type, elementName)) }}
    }
  {%- elseif (className == "ListType") -%}
    if({{ name }} == null) {
      bob.writeVarUInt32(0);
    } else {
      int size = {{ name }}.size();
      bob.writeVarUInt32(size);
      for(int i = 0; i < size; i++) {
      {{ trim(macros.getBasePrimitiveType(field.type.type)) }} e = {{ name }}.get(i);
      {{ trim(macros.writePrimary(utils, bufferObjectIdType, field.type.type, "e")) }}
      }
    }
  {% else %}
    {{ trim(macros.writePrimary(utils, bufferObjectIdType, field.type, name)) }}
  {% endif %}
  }
{%- endfor -%}