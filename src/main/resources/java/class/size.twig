{% if (definition.parent is not null) -%}
  _cachedSize = super.size();
{% else -%}
  _cachedSize = 0;
{% endif %}
{% for field in definition.fields -%}
  {% set camelCase = utils.toCamelCase(field.name) -%}
  {% if (utils.getClassName(field.type) == "ArrayType") -%}
    if(this.{{ utils.toCamelCase(field.name) }} == null) {
    {% if (field.type.type.token.toString() == "s") %}
      this.{{ utils.toCamelCase(field.name) }} = new byte[{{ utils.toUpperCase(field.name) }}_LENGTH][];
    {% else %}
      this.{{ utils.toCamelCase(field.name) }} = new {{ primitiveTypes[field.type.type.token.toString()] }}[{{ utils.toUpperCase(field.name) }}_LENGTH];
    {% endif %}
    }
    {% if(field.type.type.token.toString() == "IDENTIFIER") -%}
      {% if(utils.getClassName(field.type.type.definition) == "StructDefinition") %}
        _cachedSize += {{ utils.toUpperCase(field.name) }}_LENGTH * {{ utils.getTypeNameForDefinition(field.type.type.definition) }}.SIZE;
      {% else %}
        for(int i = 0; i < {{ utils.toUpperCase(field.name) }}_LENGTH; i++) {
        if(this.{{ camelCase }}[i] != null) {
        _cachedSize += this.{{ camelCase }}[i].size();
        // this comment seems to fix a jtwig bug "{{ field.type.definition.children }}"
        {% if (length(field.type.type.definition.children) != 0) %}
          {% if (typeSizes[bufferObjectIdType]) %}
            _cachedSize += {{ typeSizes[bufferObjectIdType] }}; // size of bufferObjectId
          {% else %}
            _cachedSize += BufferBuilder.get{{ builderTypeNames[bufferObjectIdType] }}Size(this.{{ camelCase }}.get(i).bufferObjectId()); // size of bufferObjectId
          {% endif %}
        {% endif %}
        }
        }
      {% endif %}
    {% elseif (utils.getClassName(field.type.type.definition) == "EnumDefinition") -%}
      _cachedSize += {{ utils.toUpperCase(field.name) }}_LENGTH * {{ typeSizes[field.type.type.definition.type.toString()] }};
    {% elseif (field.type.type.token.toString() == "s") %}
      for(int i = 0; i < {{ utils.toUpperCase(field.name) }}_LENGTH; i++) {
      _cachedSize += BufferBuilder.getStringSize(this.{{ camelCase }}[i]);
      }
    {% else -%}
      _cachedSize += {{ utils.toUpperCase(field.name) }}_LENGTH * {{ typeSizes[field.type.type.token.toString()] }};
    {% endif -%}
  {% elseif (utils.getClassName(field.type) == "VectorType") -%}
    if (this.{{ camelCase }} == null) {
    _cachedSize += 1; // BufferBuilder.getVarUInt32Size(0)
    } else {
    _cachedSize += BufferBuilder.getVarUInt32Size(this.{{ camelCase }}.size());
      {% if(field.type.type.token.toString() == "IDENTIFIER") -%}
        {% if(utils.getClassName(field.type.type.definition) == "StructDefinition") %}
          _cachedSize += this.{{ camelCase }}.size() * {{ utils.getTypeNameForDefinition(field.type.type.definition) }}.SIZE;
        {% else %}
          for(int i = 0; i < this.{{ camelCase }}.size(); i++) {
          if(this.{{ camelCase }}.get(i) != null) {
          _cachedSize += this.{{ camelCase }}.get(i).size();
          // this comment seems to fix a jtwig bug "{{ field.type.definition.children }}"
          {% if (length(field.type.type.definition.getChildren()) != 0) %}
            {% if (typeSizes[bufferObjectIdType]) %}
              _cachedSize += {{ typeSizes[bufferObjectIdType] }}; // size of bufferObjectId
            {% else %}
              _cachedSize += BufferBuilder.get{{ builderTypeNames[bufferObjectIdType] }}Size(this.{{ camelCase }}.get(i).bufferObjectId()); // size of bufferObjectId
            {% endif %}
          {% endif %}
          }
          }
        {% endif %}
      {% elseif (field.type.type.token.toString() == "s") %}
        for(int i = 0; i < this.{{ camelCase }}.size(); i++) {
          _cachedSize += BufferBuilder.getStringSize(this.{{ camelCase }}.get(i));
        }
      {% elseif (utils.getClassName(field.type.type.definition) == "EnumDefinition") -%}
        _cachedSize += this.{{ camelCase }}.size() * {{ typeSizes[field.type.type.definition.type.toString()] }};
      {% else -%}
        _cachedSize += this.{{ camelCase }}.size() * {{ typeSizes[field.type.type.token.toString()] }}; // size for "{{ field.type.type.token.toString() }}"
      {% endif -%}
    }


  {% elseif (utils.getClassName(field.type) == "MapType") -%}
    _cachedSize += BufferBuilder.getVarUInt32Size(this.{{ camelCase }}.size());

    {% if (field.type.keyType.token.toString() != "s") %}
      _cachedSize += this.{{ camelCase }}.size() * {{ typeSizes[field.type.keyType.token.toString()] }};
    {% endif %}

    {% if(field.type.valueType.token.toString() == "IDENTIFIER") -%}
      {% if(utils.getClassName(field.type.valueType.definition) == "StructDefinition") %}
        _cachedSize += this.{{ camelCase }}.size() * {{ utils.getTypeNameForDefinition(field.type.valueType.definition) }}.SIZE;
      {% else %}
        for(java.util.Map.Entry<{{ trim(macros.getBaseType(field.type.keyType)) }}, {{ trim(macros.getBaseType(field.type.valueType)) }}> e : this.{{ camelCase }}.entrySet()) {
        {% if (field.type.keyType.token.toString() == "s") %}
          _cachedSize += BufferBuilder.getStringSize(e.getKey());
        {% endif %}
          if(e.getValue() != null) {
        _cachedSize += e.getValue().size();
            // this comment seems to fix a jtwig bug "{{ field.type.definition.children }}"
            {% if (length(field.type.valueType.definition.getChildren()) != 0) %}
              {% if (typeSizes[bufferObjectIdType]) %}
                _cachedSize += {{ typeSizes[bufferObjectIdType] }}; // size of bufferObjectId
              {% else %}
                _cachedSize += BufferBuilder.get{{ builderTypeNames[bufferObjectIdType] }}Size(e.getValue().bufferObjectId()); // size of bufferObjectId
              {% endif %}
            {% endif %}
          }
        }
      {% endif %}
    {% elseif (field.type.valueType.token.toString() == "s") %}
      for(java.util.Map.Entry<{{ trim(macros.getBaseType(field.type.keyType)) }}, {{ trim(macros.getBaseType(field.type.valueType)) }}> e : this.{{ camelCase }}.entrySet()) {
      _cachedSize += BufferBuilder.getStringSize(e.getKey());
      }
    {% elseif (utils.getClassName(field.type.valueType.definition) == "EnumDefinition") -%}
      _cachedSize += this.{{ camelCase }}.size() * {{ typeSizes[field.type.valueType.definition.type.toString()] }};
    {% else -%}
      _cachedSize += this.{{ camelCase }}.size() * {{ typeSizes[field.type.valueType.token.toString()] }}; // size for "{{ field.type.type.token.toString() }}"
    {% endif -%}


  {% elseif (utils.getClassName(field.type.definition) == "EnumDefinition") -%}
    _cachedSize += {{ typeSizes[field.type.definition.type.toString()] }}; // size for "{{ field.type.definition.type.toString() }}"
  {% elseif (field.type.token.toString() == "IDENTIFIER") %}
    {% if(utils.getClassName(field.type.definition) == "StructDefinition") %}
      _cachedSize += {{ utils.getTypeNameForDefinition(field.type.definition) }}.SIZE;
    {% else %}
      _cachedSize += 1; // +1 for "is null" byte
      if(this.{{ camelCase }} != null) {
      _cachedSize += this.{{ camelCase }}.size();
      // this comment seems to fix a jtwig bug "{{ field.type.definition.children }}"
      {% if (length(field.type.definition.getChildren()) != 0) %}
        {% if (typeSizes[bufferObjectIdType]) %}
          _cachedSize += {{ typeSizes[bufferObjectIdType] }}; // size of bufferObjectId
        {% else %}
          _cachedSize += BufferBuilder.get{{ builderTypeNames[bufferObjectIdType] }}Size(this.{{ camelCase }}.bufferObjectId());  // size of bufferObjectId
        {% endif %}
      {% endif %}
      }
    {% endif %}
  {% elseif (field.type.token.toString() == "s") %}
    _cachedSize += BufferBuilder.getStringSize(this.{{ camelCase }});
  {% else -%}
    _cachedSize += {{ typeSizes[field.type.token.toString()] }}; // size for "{{ field.type.token.toString() }}"
  {% endif -%}
{% endfor %}
return _cachedSize;