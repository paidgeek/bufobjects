{%- import "/java/macros.twig" as macros -%}
{%- import "/java/types.twig" as types -%}

public final class BufferObjects {
{%- for namespace, definitions in schema -%}
{%- for definition in definitions -%}
{%- if(utils.getClassName(definition) == "TypeDefinition") %}
  public static int {{ trim(macros.getBufferObjectIdName(definition)) }} = {{ ids[definition] }};
{%- endif -%}
{%- endfor -%}
{%- endfor %}

  public static int writeTo(byte[] b, int off, BufferObject obj) {
    int id = obj.getBufferObjectId();
    { {%- include "/java/write/vu32.twig" with {name:"id"} -%} }
    return obj.writeTo(b, off);
  }

  public static BufferObject readFrom(byte[] b, int off) {
    int id = 0;
    {
      {% include "/java/read/vu32.twig" with {name:"id"} %}
    }
    BufferObject obj = null;
    switch(id) {
{%- for namespace, definitions in schema -%}
{%- for definition in definitions -%}
  {% if(utils.getClassName(definition) == "TypeDefinition") -%}
  {%- set name = definition.name.simpleName -%}
  {%- set camelCase = utils.toCamelCase(name) -%}
  {%- set typeName = trim(macros.getTypeNameForDefinition(definition)) -%}
    case {{ trim(macros.getBufferObjectIdName(definition)) }}:
    obj = new {{ typeName }}();
    break;
  {% endif -%}
{%- endfor -%}
{%- endfor -%}
  }
    obj.readFrom(b, off);
    return obj;
  }
}