{%- set name = definition.name.simpleName -%}

{% set fields = definition.fields %}
{% for p in definition.parentPath -%}
  {% set fields = merge(fields, p.fields) %}
{%- endfor -%}

{% for p in definition.name.path %}
  {% if (loop.revindex0 != 0) %}
      namespace {{ lower(p) }} {
  {% endif %}
{% endfor %}

class {{ name }}
{% if (definition.parent is not null) -%}
  : public {{ trim(macros.getBaseNoPointer(utils, definition.parentDefinition)) }}
{%- else -%}
  : public bufobjects::BufferObject
{%- endif -%}
{
public:
{% for field in definition.fields %}
  {%- if (utils.getClassName(field.type) == "ArrayType") %}
    static const uint32_t k{{ field.name }}Length = {{ field.type.length }};
  {% endif -%}
{% endfor %}
{% if (utils.hasAttribute(definition, "MakeBuilder") == true) %}
  class Builder;
{% endif %}

{{ name }}();
{{ name }}(
{%- for field in fields -%}
  {{ trim(macros.getTypeName(utils, field.type)) }} {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
void Init(
{%- for field in fields -%}
    {{ trim(macros.getTypeName(utils, field.type)) }} {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
{{ name }}(const {{ name }}& from);
{{ name }}& operator=(const {{ name }}& from);
~{{ name }}();
{{ types[bufferObjectIdType] }} BufferObjectId() const override;
void Clear() override;
void CopyTo(bufobjects::BufferObject& obj) const override;
uint32_t Size() const override;
void WriteTo(bufobjects::BufferBuilder& bb) const override;
void ReadFrom(bufobjects::BufferBuilder& bb) override;
void WriteJsonTo(std::ostream &os) const override;
{%- include "/cpp/class/getset.twig" -%}
{%- include "/cpp/class/has.twig" -%}
static void WriteDirectTo(bufobjects::BufferBuilder& bb,
{%- for field in fields -%}
  const {{ trim(macros.getTypeNameNoPointer(utils, field.type)) }}& {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
static void WriteDirectIdentifiedTo(bufobjects::BufferBuilder& bb,
{%- for field in fields -%}
  const {{ trim(macros.getTypeNameNoPointer(utils, field.type)) }}& {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
protected:
{% include "/cpp/class/fields_declaration.twig" %}
private:
  mutable uint32_t _cached_size_;
};

{% if (utils.hasAttribute(definition, "MakeBuilder") == true) %}
  {% include "/cpp/class/builder_header.twig" %}
{% endif %}

{% for p in definition.name.path %}
  {% if (loop.revindex0 != 0) %}
    }
  {% endif %}
{% endfor %}
