{%- import "/cpp/macros.twig" as macros -%}
{%- import "/cpp/types.twig" as tt -%}

{%- set name = definition.name.simpleName -%}
// Generated with https://github.com/paidgeek/bufobjects

{%- set incGuard = "" -%}
{%- for p in definition.name.path -%}
  {%- if (loop.index0 != 0) -%}
    {%- set incGuard = concat(incGuard, "_", upper(p)) -%}
  {%- else %}
    {% set incGuard = concat(incGuard, upper(p)) -%}
  {%- endif -%}
{%- endfor -%}

#ifndef {{ incGuard }}_H
#define {{ incGuard }}_H

{% set incPath = "" -%}
{%- for p in definition.name.path -%}
  {%- if (loop.index0 != 0) -%}
    {%- set incPath = concat(incPath, "../") -%}
  {%- endif -%}
{%- endfor -%}
#include "{{ incPath }}buffer_object.h"

{% set fields = definition.fields %}
{% for p in definition.parentPath -%}
  {% set fields = merge(fields, p.fields) %}
{%- endfor -%}

{% for field in fields -%}
  {%- set type = 0 -%}
  {%- if (utils.getClassName(field.type.definition) == "StructDefinition" or utils.getClassName(field.type.definition) == "EnumDefinition") -%}
    {%- set type = field.type -%}
  {%- elseif(utils.getClassName(field.type.type.definition) == "StructDefinition" or utils.getClassName(field.type.type.definition) == "EnumDefinition") -%}
    {%- set type = field.type.type -%}
  {%- endif -%}
  {%- if (type != 0) -%}
    {% set path = "" %}
    {%- for p in type.definition.name.path -%}
      {%- if (loop.revindex0 != 0) -%}
        {% if (loop.index0 == 0) %}
          {%- set path = concat(path, lower(p)) -%}
        {% else %}
          {%- set path = concat(path, "/", lower(p)) -%}
        {% endif %}
      {%- endif -%}
    {%- endfor -%}
    #include "{{ incPath }}{{ path }}/{{ utils.toSnakeCase(type.definition.name.simpleName) }}.h"
  {% endif -%}
{%- endfor %}

{% if (definition.parent is not null) -%}
  {% set path = "" %}
  {%- for p in definition.parentDefinition.name.path -%}
    {%- if (loop.revindex0 != 0) -%}
      {% if (loop.index0 == 0) %}
        {%- set path = concat(path, lower(p)) -%}
      {% else %}
        {%- set path = concat(path, "/", lower(p)) -%}
      {% endif %}
    {%- endif -%}
  {%- endfor -%}
  #include "{{ incPath }}{{ path }}/{{ utils.toSnakeCase(definition.parentDefinition.name.simpleName) }}.h"
{%- endif %}

{% for field in fields -%}
  {%- set type = 0 -%}
  {%- if (field.type.token.toString() == "IDENTIFIER") -%}
    {%- set type = field.type -%}
  {%- elseif(field.type.type.token.toString() == "IDENTIFIER") -%}
    {%- set type = field.type.type -%}
  {%- endif -%}
  {%- if (type != 0) -%}
    {%- for p in type.definition.name.path -%}
      {%- if (loop.revindex0 != 0) -%}
        namespace {{ lower(p) }} {
      {%- endif -%}
    {%- endfor -%}
    {% if (utils.getClassName(type.definition) == "ClassDefinition" or utils.getClassName(type.definition) == "InterfaceDefinition") -%}
    class {{ type.definition.name.simpleName }};
    {%- endif -%}
    {%- for p in type.definition.name.path -%}
      {%- if (loop.revindex0 != 0) -%}
        }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
{%- endfor -%}

{% for p in definition.name.path %}
  {% if (loop.revindex0 != 0) %}
      namespace {{ lower(p) }} {
  {% endif %}
{% endfor %}

class {{ name }}
{% if (definition.parent is not null) -%}
  : public {{ trim(macros.getBaseNoPointer(utils, definition.parentDefinition)) }}
{%- else -%}
  : public bufobjects::BufferObject
{%- endif -%}
{

protected:
{% for field in definition.fields %}
  {%- set typeName = trim(macros.getTypeName(utils, field.type)) -%}
  {{ typeName }} {{ utils.toSnakeCase(field.name) }}_;
{% endfor %}

public:
  typedef std::shared_ptr<{{ trim(macros.getBaseNoPointer(utils, definition)) }}> Ptr;
{% for field in definition.fields %}
  {%- if (utils.getClassName(field.type) == "ArrayType") %}
    static const uint32_t k{{ field.name }}Length = {{ field.type.length }};
  {% endif -%}
{% endfor %}
  class Builder;

{{ name }}();
{{ name }}(
{%- for field in fields -%}
  {{ trim(macros.getTypeName(utils, field.type)) }} {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
void Init(
{%- for field in fields -%}
  {%- if (utils.getClassName(field.type.definition) == "ClassDefinition") -%}
    {{ trim(macros.getTypeName(utils, field.type)) }}& {{ utils.toSnakeCase(field.name) }}
  {%- else -%}
    {{ trim(macros.getTypeName(utils, field.type)) }} {{ utils.toSnakeCase(field.name) }}
  {%- endif -%}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
{{ name }}(const {{ name }}& from);
{{ name }}& operator=(const {{ name }}& from);
{{ types[bufferObjectIdType] }} BufferObjectId() const;
void Reset();
void CopyTo(bufobjects::BufferObject& obj) const;
uint32_t Size() const;
void WriteTo(bufobjects::BufferObjectBuilder& bob) const;
void ReadFrom(bufobjects::BufferObjectBuilder& bob);
{%- include "/cpp/class/getset_header.twig" -%}
static void WriteDirectTo(bufobjects::BufferObjectBuilder& bob,
{%- for field in fields -%}
  {{ trim(macros.getTypeName(utils, field.type)) }} {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
static void WriteDirectIdentifiedTo(bufobjects::BufferObjectBuilder& bob,
{%- for field in fields -%}
  {{ trim(macros.getTypeName(utils, field.type)) }} {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
};

{% include "/cpp/class/builder_header.twig" %}

{% for p in definition.name.path %}
  {% if (loop.revindex0 != 0) %}
    }
  {% endif %}
{% endfor %}

#endif
