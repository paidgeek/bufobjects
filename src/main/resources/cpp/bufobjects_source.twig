{% import "/cpp/types.twig" as tt %}
{%- import "/cpp/macros.twig" as macros -%}
// Generated with https://github.com/paidgeek/bufobjects

#include "bufobjects.h"
{% for inc in includes %}
  #include "{{ inc }}"
{% endfor %}

namespace bufobjects {

BufferObject* {{ utils.toMethod("ReadIdentifiedFrom") }}(BufferBuilder& _bb) {
  {{ types[bufferObjectIdType] }} id = _bb.Read{{ builderTypeNames[bufferObjectIdType] }}();
  BufferObject* obj = nullptr;

  switch(id) {
{% for namespace, definitions in schema -%}
{%- for definition in definitions -%}
  {% if(utils.getClassName(definition) == "ClassDefinition") -%}
    {%- set typeName = utils.getTypeNameForDefinition(definition) -%}
    case {{ utils.getBufferObjectIdName(definition) }}:
      obj = new {{ typeName }}{};
      obj->{{ utils.toMethod("ReadFrom") }}(_bb);
    break;
  {% endif -%}
{%- endfor -%}
{%- endfor -%}
  }
  return obj;
}

}
