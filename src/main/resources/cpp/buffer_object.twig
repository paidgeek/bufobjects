{% import "/cpp/types.twig" as tt %}
{%- import "/cpp/macros.twig" as macros -%}
// Generated with https://github.com/paidgeek/bufobjects

#ifndef BUFOBJECTS_BUFFER_OBJECT_H
#define BUFOBJECTS_BUFFER_OBJECT_H

#include <memory>
#include "buffer_object_builder.h"

namespace bufobjects {
  class BufferObject {
  public:
    BufferObject() {}
    virtual {{ types[bufferObjectIdType] }} BufferObjectId() const = 0;
    virtual void Reset() = 0;
    virtual void CopyTo(BufferObject& dst) const = 0;
    virtual void WriteTo(BufferObjectBuilder& bob) const = 0;
    virtual void ReadFrom(BufferObjectBuilder& bob) = 0;
    virtual uint32_t Size() const {
      return 0;
    }

    enum BufferObjectId : {{ types[bufferObjectIdType] }} {
    {%- for namespace, definitions in schema -%}
      {%- for definition in definitions -%}
        {%- if(utils.getClassName(definition) == "TypeDefinition") %}
          {{ trim(macros.getBufferObjectIdName(definition)) }} = {{ ids[definition] }}
          {%- if (loop.revindex0 != 0) -%}
            ,
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endfor %}
    };
  };

}

#endif
