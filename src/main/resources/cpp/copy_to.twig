{% set fields = definition.fields %}
{% for p in definition.parentPath -%}
  {% set fields = merge(fields, p.fields) %}
{%- endfor -%}
{% for field in fields -%}
  {%- set camelCase = utils.toCamelCase(field.name) -%}
  {%- set className = utils.getClassName(field.type) -%}
  {%- if (className == "ArrayType") -%}
    dst.{{ camelCase }}_ = std::array< {{ trim(macros.getBasePrimitiveType(field.type.type)) }}, {{ field.type.length }}>( {{ camelCase }}_ );
  {%- elseif (className == "ListType") -%}
    dst.{{ camelCase }}_ = std::vector< {{ trim(macros.getBaseType(field.type.type)) }} >({{ camelCase }}_);
  {%- elseif (utils.getClassName(field.type.definition) == "EnumDefinition") -%}
    dst.{{ camelCase }}_ = {{ camelCase }}_;
  {%- elseif (field.type.token.toString() == "IDENTIFIER") -%}
    if({{ camelCase }}_ != nullptr) {
      {{ camelCase }}_.CopyTo(dst.{{ camelCase }}_);
    }
  {%- else -%}
    dst.{{ camelCase }}_ = {{ camelCase }}_;
  {%- endif -%}
{%- endfor %}