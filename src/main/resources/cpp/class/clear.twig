{% for field in definition.fields -%}
  {%- set fieldName = utils.toClassFieldName(field.name) -%}
  {%- set className = utils.getClassName(field.type) -%}

  {% if (className == "VectorType") %}
    {{ fieldName }}.clear();
  {% elseif (className == "ArrayType") %}
    {% if (utils.getClassName(field.type.type.definition) != "StructDefinition" and field.type.type.token.toString() == "IDENTIFIER") %}
      for(auto _e : {{ fieldName }}) {
        _e.clear();
      }
    {% else %}
      {{ fieldName }} = std::array<{{ trim(macros.getBaseNoPointer(utils, field.type.type)) }}, {{ field.type.length }}>{};
    {% endif %}
  {% elseif (className == "MapType") %}
    {{ fieldName }}.clear();
  {%- elseif (utils.getClassName(field.type.definition) == "EnumDefinition") -%}
    {{ fieldName }} = static_cast< {{ trim(macros.getBaseType(utils, field.type)) }} >(0);
  {%- elseif (field.type.token.toString() == "s") -%}
    {{ fieldName }}.clear();
  {%- elseif (field.type.token.toString() == "b") -%}
    {{ fieldName }} = false;
  {%- elseif (utils.getClassName(field.type.definition) == "StructDefinition") -%}
    {{ fieldName }}.Clear();
  {%- elseif (field.type.token.toString() == "IDENTIFIER") -%}
    delete({{ fieldName }});
    {{ fieldName }} = nullptr;
  {%- elseif (field.type.token.toString() == "f32") -%}
    {{ fieldName }} = 0.0f;
  {%- elseif (field.type.token.toString() == "f64") -%}
    {{ fieldName }} = 0.0;
  {%- else -%}
    {{ fieldName }} = 0;
  {%- endif -%}
{%- endfor %}
