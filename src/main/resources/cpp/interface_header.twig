{%- set name = utils.toInterfaceName(definition.name.simpleName) -%}

{% set fields = definition.fields %}
{% for p in definition.parentPath -%}
  {% set fields = merge(fields, p.fields) %}
{%- endfor -%}

{% if (definition.parent is not null) -%}
  {%- for p in definition.parentDefinition.name.path -%}
    {%- if (loop.revindex0 != 0) -%}
      namespace {{ utils.toNamespaceName(p) }} {
    {%- endif -%}
  {%- endfor -%}
  class {{ utils.toClassName(definition.parentDefinition.name.simpleName) }};
  {%- for p in definition.parentDefinition.name.path -%}
    {%- if (loop.revindex0 != 0) -%}
      }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

{% for p in definition.name.path %}
  {% if (loop.revindex0 != 0) %}
    namespace {{ utils.toNamespaceName(p) }} {
  {% endif %}
{% endfor %}

{% set fields = definition.fields %}
{% for p in definition.parentPath -%}
  {% set fields = merge(fields, p.fields) %}
{%- endfor -%}

class {{ name }}
{% if (definition.parent is not null) -%}
  : public {{ utils.getTypeNameForDefinition(definition.parentDefinition) }}
{%- else -%}
  : public bufobjects::BufferObject
{%- endif -%}
{
public:
{% for field in definition.fields %}
  {%- if (utils.getClassName(field.type) == "ArrayType") %}
    static constexpr uint32_t {{ utils.toConstant(concat(field.name, "Length")) }} = {{ field.type.length }};
  {% endif -%}
{% endfor %}
{{ name }}();
{{ name }}(
{%- for field in fields -%}
    {{ trim(macros.getTypeName(utils, field.type)) }} {{ utils.toSnakeCase(field.name) }}
  {%- if (loop.revindex0 != 0) -%}
    ,
  {%- endif -%}
{%- endfor -%});
virtual ~{{ name }}(){};
virtual uint32_t {{ utils.toMethod("Size") }}() const override;
virtual void {{ utils.toMethod("Clear") }}() override;
virtual void {{ utils.toMethod("WriteJsonTo") }}(std::ostream &os) const = 0;

{% include "/cpp/class/getset.twig" %}

{% include "/cpp/class/has.twig" %}
protected:
{% include "/cpp/class/fields_declaration.twig" %}
private:
  mutable uint32_t _cached_size_;
};

{% for p in definition.name.path %}
  {% if (loop.revindex0 != 0) %}
    }
  {% endif %}
{% endfor %}
